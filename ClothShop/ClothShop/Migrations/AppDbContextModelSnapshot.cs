// <auto-generated />
using System;
using ClothShop.DAO;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClothShop.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ClothShop.Entities.AccountBag", b =>
                {
                    b.Property<int>("accountBagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("accountBagId"), 1L, 1);

                    b.Property<int?>("accountId")
                        .HasColumnType("int");

                    b.Property<int?>("productId")
                        .HasColumnType("int");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.HasKey("accountBagId");

                    b.HasIndex("accountId");

                    b.HasIndex("productId");

                    b.ToTable("AccountBags");
                });

            modelBuilder.Entity("ClothShop.Entities.Accounts", b =>
                {
                    b.Property<int>("accountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("accountId"), 1L, 1);

                    b.Property<DateTime?>("accountBorn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("accountCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("accountDetailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("accountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("accountPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("accountStatusId")
                        .HasColumnType("int");

                    b.Property<string>("accountUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("roleID")
                        .HasColumnType("int");

                    b.Property<string>("sdt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("accountId");

                    b.HasIndex("accountStatusId");

                    b.HasIndex("roleID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("ClothShop.Entities.AccountShipContact", b =>
                {
                    b.Property<int>("accountShipContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("accountShipContactId"), 1L, 1);

                    b.Property<string>("accountDetailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("accountId")
                        .HasColumnType("int");

                    b.Property<string>("accountPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("accountShipContactStatusId")
                        .HasColumnType("int");

                    b.Property<string>("districtID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("provinceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("receiverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wardCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("accountShipContactId");

                    b.HasIndex("accountId");

                    b.HasIndex("accountShipContactStatusId");

                    b.ToTable("AccountShipContacts");
                });

            modelBuilder.Entity("ClothShop.Entities.AccountShipContactStatus", b =>
                {
                    b.Property<int>("accountShipContactStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("accountShipContactStatusId"), 1L, 1);

                    b.Property<string>("accountShipContactStatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("accountShipContactStatusDetail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("accountShipContactStatusId");

                    b.ToTable("AccountShipContactStatuses");
                });

            modelBuilder.Entity("ClothShop.Entities.AccountStatus", b =>
                {
                    b.Property<int>("accountStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("accountStatusId"), 1L, 1);

                    b.Property<string>("accountStatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("accountStatusDetail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("accountStatusId");

                    b.ToTable("AccountStatuses");
                });

            modelBuilder.Entity("ClothShop.Entities.Bill", b =>
                {
                    b.Property<int>("billId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("billId"), 1L, 1);

                    b.Property<int?>("accountShipContactId")
                        .HasColumnType("int");

                    b.Property<string>("billCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("billStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("buyMethodId")
                        .HasColumnType("int");

                    b.Property<string>("buyerNotification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("closeDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("employeeaccountId")
                        .HasColumnType("int");

                    b.Property<int?>("idEmployee")
                        .HasColumnType("int");

                    b.Property<DateTime?>("productReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("receivedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("shipMethodId")
                        .HasColumnType("int");

                    b.Property<double>("shipPrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("shipToBuyerDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("totalBill")
                        .HasColumnType("float");

                    b.HasKey("billId");

                    b.HasIndex("accountShipContactId");

                    b.HasIndex("billStatusId");

                    b.HasIndex("buyMethodId");

                    b.HasIndex("employeeaccountId");

                    b.HasIndex("shipMethodId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("ClothShop.Entities.BillDetail", b =>
                {
                    b.Property<int>("billDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("billDetailId"), 1L, 1);

                    b.Property<int?>("billId")
                        .HasColumnType("int");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<int?>("productId")
                        .HasColumnType("int");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.HasKey("billDetailId");

                    b.HasIndex("billId");

                    b.HasIndex("productId");

                    b.ToTable("BillDetails");
                });

            modelBuilder.Entity("ClothShop.Entities.BillSales", b =>
                {
                    b.Property<int>("billSalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("billSalesId"), 1L, 1);

                    b.Property<int?>("billId")
                        .HasColumnType("int");

                    b.Property<int?>("salesId")
                        .HasColumnType("int");

                    b.HasKey("billSalesId");

                    b.HasIndex("billId");

                    b.HasIndex("salesId");

                    b.ToTable("BillSales");
                });

            modelBuilder.Entity("ClothShop.Entities.BillStatus", b =>
                {
                    b.Property<int>("billStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("billStatusId"), 1L, 1);

                    b.Property<string>("billStatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("billStatusDetail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("billStatusId");

                    b.ToTable("BillStatuses");
                });

            modelBuilder.Entity("ClothShop.Entities.Brand", b =>
                {
                    b.Property<int>("brandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("brandId"), 1L, 1);

                    b.Property<string>("brandCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("brandDetail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("brandId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("ClothShop.Entities.BuyMethod", b =>
                {
                    b.Property<int>("buyMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("buyMethodId"), 1L, 1);

                    b.Property<string>("buyMethodCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("buyMethodName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("buyMethodId");

                    b.ToTable("BuyMethods");
                });

            modelBuilder.Entity("ClothShop.Entities.CategoryType", b =>
                {
                    b.Property<int>("categoryTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("categoryTypeId"), 1L, 1);

                    b.Property<string>("categoryTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoryTypeDetail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("categoryTypeId");

                    b.ToTable("CategoryTypes");
                });

            modelBuilder.Entity("ClothShop.Entities.Color", b =>
                {
                    b.Property<int>("colorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("colorId"), 1L, 1);

                    b.Property<string>("colorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("colorDetail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("colorId");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("ClothShop.Entities.Producer", b =>
                {
                    b.Property<int>("producerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("producerId"), 1L, 1);

                    b.Property<string>("producerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("producerDetail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("producerId");

                    b.ToTable("Producers");
                });

            modelBuilder.Entity("ClothShop.Entities.Product", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("productId"), 1L, 1);

                    b.Property<int?>("brandId")
                        .HasColumnType("int");

                    b.Property<int?>("categoryTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("colorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int?>("producerId")
                        .HasColumnType("int");

                    b.Property<string>("productDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("productStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("shellPrice")
                        .HasColumnType("int");

                    b.Property<int?>("sizeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("productId");

                    b.HasIndex("brandId");

                    b.HasIndex("categoryTypeId");

                    b.HasIndex("colorId");

                    b.HasIndex("producerId");

                    b.HasIndex("productStatusId");

                    b.HasIndex("sizeId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ClothShop.Entities.ProductImg", b =>
                {
                    b.Property<int>("productImgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("productImgId"), 1L, 1);

                    b.Property<int?>("countImg")
                        .HasColumnType("int");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<byte[]>("productImg")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("productImgId");

                    b.HasIndex("productId");

                    b.ToTable("ProductImgs");
                });

            modelBuilder.Entity("ClothShop.Entities.ProductStatus", b =>
                {
                    b.Property<int>("productStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("productStatusId"), 1L, 1);

                    b.Property<string>("productStatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productStatusDetail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("productStatusId");

                    b.ToTable("ProductStatuses");
                });

            modelBuilder.Entity("ClothShop.Entities.Role", b =>
                {
                    b.Property<int>("roleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("roleID"), 1L, 1);

                    b.Property<string>("roleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("roleDetail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("roleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ClothShop.Entities.Sales", b =>
                {
                    b.Property<int>("salesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("salesId"), 1L, 1);

                    b.Property<DateTime?>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("openDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("saleTypeId")
                        .HasColumnType("int");

                    b.Property<string>("salesCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("salesInt")
                        .HasColumnType("int");

                    b.Property<string>("salesName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("salesPercent")
                        .HasColumnType("int");

                    b.Property<int?>("salesStatussalessStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("salessStatusId")
                        .HasColumnType("int");

                    b.HasKey("salesId");

                    b.HasIndex("saleTypeId");

                    b.HasIndex("salesStatussalessStatusId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("ClothShop.Entities.SalesStatus", b =>
                {
                    b.Property<int>("salessStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("salessStatusId"), 1L, 1);

                    b.Property<string>("statusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("statusDetail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("salessStatusId");

                    b.ToTable("SalesStatuses");
                });

            modelBuilder.Entity("ClothShop.Entities.SaleType", b =>
                {
                    b.Property<int>("saleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("saleTypeId"), 1L, 1);

                    b.Property<string>("saleTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("saleTypeDetail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("saleTypeId");

                    b.ToTable("SaleTypes");
                });

            modelBuilder.Entity("ClothShop.Entities.ShipMethod", b =>
                {
                    b.Property<int>("shipMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("shipMethodId"), 1L, 1);

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<string>("shipMethodCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shipMethodName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("shipMethodId");

                    b.ToTable("ShipMethods");
                });

            modelBuilder.Entity("ClothShop.Entities.Size", b =>
                {
                    b.Property<int>("sizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sizeId"), 1L, 1);

                    b.Property<string>("sizeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sizeDetail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sizeId");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("ClothShop.Entities.VoteStar", b =>
                {
                    b.Property<int>("voteStarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("voteStarId"), 1L, 1);

                    b.Property<int?>("accountId")
                        .HasColumnType("int");

                    b.Property<int?>("productId")
                        .HasColumnType("int");

                    b.Property<int>("starVoted")
                        .HasColumnType("int");

                    b.HasKey("voteStarId");

                    b.HasIndex("accountId");

                    b.HasIndex("productId");

                    b.ToTable("VoteStars");
                });

            modelBuilder.Entity("ClothShop.Entities.AccountBag", b =>
                {
                    b.HasOne("ClothShop.Entities.Accounts", "account")
                        .WithMany("accountBags")
                        .HasForeignKey("accountId");

                    b.HasOne("ClothShop.Entities.Product", "product")
                        .WithMany()
                        .HasForeignKey("productId");

                    b.Navigation("account");

                    b.Navigation("product");
                });

            modelBuilder.Entity("ClothShop.Entities.Accounts", b =>
                {
                    b.HasOne("ClothShop.Entities.AccountStatus", "accountStatus")
                        .WithMany("accounts")
                        .HasForeignKey("accountStatusId");

                    b.HasOne("ClothShop.Entities.Role", "role")
                        .WithMany("accounts")
                        .HasForeignKey("roleID");

                    b.Navigation("accountStatus");

                    b.Navigation("role");
                });

            modelBuilder.Entity("ClothShop.Entities.AccountShipContact", b =>
                {
                    b.HasOne("ClothShop.Entities.Accounts", "account")
                        .WithMany("accountShipContacts")
                        .HasForeignKey("accountId");

                    b.HasOne("ClothShop.Entities.AccountShipContactStatus", "accountShipContactStatus")
                        .WithMany("accountShipContacts")
                        .HasForeignKey("accountShipContactStatusId");

                    b.Navigation("account");

                    b.Navigation("accountShipContactStatus");
                });

            modelBuilder.Entity("ClothShop.Entities.Bill", b =>
                {
                    b.HasOne("ClothShop.Entities.AccountShipContact", "accountShipContact")
                        .WithMany("bills")
                        .HasForeignKey("accountShipContactId");

                    b.HasOne("ClothShop.Entities.BillStatus", "billStatus")
                        .WithMany("bills")
                        .HasForeignKey("billStatusId");

                    b.HasOne("ClothShop.Entities.BuyMethod", "buyMethod")
                        .WithMany()
                        .HasForeignKey("buyMethodId");

                    b.HasOne("ClothShop.Entities.Accounts", "employee")
                        .WithMany()
                        .HasForeignKey("employeeaccountId");

                    b.HasOne("ClothShop.Entities.ShipMethod", "shipMethod")
                        .WithMany()
                        .HasForeignKey("shipMethodId");

                    b.Navigation("accountShipContact");

                    b.Navigation("billStatus");

                    b.Navigation("buyMethod");

                    b.Navigation("employee");

                    b.Navigation("shipMethod");
                });

            modelBuilder.Entity("ClothShop.Entities.BillDetail", b =>
                {
                    b.HasOne("ClothShop.Entities.Bill", "bill")
                        .WithMany("billDetails")
                        .HasForeignKey("billId");

                    b.HasOne("ClothShop.Entities.Product", "product")
                        .WithMany("billDetails")
                        .HasForeignKey("productId");

                    b.Navigation("bill");

                    b.Navigation("product");
                });

            modelBuilder.Entity("ClothShop.Entities.BillSales", b =>
                {
                    b.HasOne("ClothShop.Entities.Bill", "bill")
                        .WithMany("billSalesList")
                        .HasForeignKey("billId");

                    b.HasOne("ClothShop.Entities.Sales", "sales")
                        .WithMany("billSalesList")
                        .HasForeignKey("salesId");

                    b.Navigation("bill");

                    b.Navigation("sales");
                });

            modelBuilder.Entity("ClothShop.Entities.Product", b =>
                {
                    b.HasOne("ClothShop.Entities.Brand", "brand")
                        .WithMany()
                        .HasForeignKey("brandId");

                    b.HasOne("ClothShop.Entities.CategoryType", "categoryType")
                        .WithMany("products")
                        .HasForeignKey("categoryTypeId");

                    b.HasOne("ClothShop.Entities.Color", "color")
                        .WithMany()
                        .HasForeignKey("colorId");

                    b.HasOne("ClothShop.Entities.Producer", "producer")
                        .WithMany()
                        .HasForeignKey("producerId");

                    b.HasOne("ClothShop.Entities.ProductStatus", "productStatus")
                        .WithMany()
                        .HasForeignKey("productStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothShop.Entities.Size", "size")
                        .WithMany()
                        .HasForeignKey("sizeId");

                    b.Navigation("brand");

                    b.Navigation("categoryType");

                    b.Navigation("color");

                    b.Navigation("producer");

                    b.Navigation("productStatus");

                    b.Navigation("size");
                });

            modelBuilder.Entity("ClothShop.Entities.ProductImg", b =>
                {
                    b.HasOne("ClothShop.Entities.Product", "product")
                        .WithMany("productImgs")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("ClothShop.Entities.Sales", b =>
                {
                    b.HasOne("ClothShop.Entities.SaleType", "saleType")
                        .WithMany()
                        .HasForeignKey("saleTypeId");

                    b.HasOne("ClothShop.Entities.SalesStatus", "salesStatus")
                        .WithMany("saless")
                        .HasForeignKey("salesStatussalessStatusId");

                    b.Navigation("saleType");

                    b.Navigation("salesStatus");
                });

            modelBuilder.Entity("ClothShop.Entities.VoteStar", b =>
                {
                    b.HasOne("ClothShop.Entities.Accounts", "account")
                        .WithMany()
                        .HasForeignKey("accountId");

                    b.HasOne("ClothShop.Entities.Product", "product")
                        .WithMany()
                        .HasForeignKey("productId");

                    b.Navigation("account");

                    b.Navigation("product");
                });

            modelBuilder.Entity("ClothShop.Entities.Accounts", b =>
                {
                    b.Navigation("accountBags");

                    b.Navigation("accountShipContacts");
                });

            modelBuilder.Entity("ClothShop.Entities.AccountShipContact", b =>
                {
                    b.Navigation("bills");
                });

            modelBuilder.Entity("ClothShop.Entities.AccountShipContactStatus", b =>
                {
                    b.Navigation("accountShipContacts");
                });

            modelBuilder.Entity("ClothShop.Entities.AccountStatus", b =>
                {
                    b.Navigation("accounts");
                });

            modelBuilder.Entity("ClothShop.Entities.Bill", b =>
                {
                    b.Navigation("billDetails");

                    b.Navigation("billSalesList");
                });

            modelBuilder.Entity("ClothShop.Entities.BillStatus", b =>
                {
                    b.Navigation("bills");
                });

            modelBuilder.Entity("ClothShop.Entities.CategoryType", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("ClothShop.Entities.Product", b =>
                {
                    b.Navigation("billDetails");

                    b.Navigation("productImgs");
                });

            modelBuilder.Entity("ClothShop.Entities.Role", b =>
                {
                    b.Navigation("accounts");
                });

            modelBuilder.Entity("ClothShop.Entities.Sales", b =>
                {
                    b.Navigation("billSalesList");
                });

            modelBuilder.Entity("ClothShop.Entities.SalesStatus", b =>
                {
                    b.Navigation("saless");
                });
#pragma warning restore 612, 618
        }
    }
}
